{"version":3,"sources":["componets/Header/index.jsx","componets/Menus/Menu/index.tsx","componets/Menus/index.tsx","componets/Home/index.jsx","libs/data.ts","libs/random.ts","componets/Badge/index.tsx","componets/Footer/index.tsx","componets/Action/index.tsx","componets/Words/index.tsx","componets/Alphabet/index.tsx","componets/Days/index.tsx","componets/Months/index.tsx","componets/Layout/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","Menu","prosps","title","toLink","icon","to","size","color","Menus","faAsterisk","faCalendarDay","faBraille","faFont","Home","GetData","type","data","this","slice","words","alphabet","days","months","Array","isArray","RandomText","arraytext","newDta","length","row","find","item","ENGLISH","Math","floor","random","Badge","value","style","backgroundColor","Footer","props","bad","good","arryText","Action","useState","state","setsTate","input","setInput","isShow","setIsShow","setColor","setArrayText","setBad","setGood","inputEl","useRef","title1","title2","useEffect","GetText","focusInput","SPANISH","current","focus","toUpperCase","Divider","Form","onSubmit","e","preventDefault","toLowerCase","setTimeout","Field","ref","onChange","target","placeholder","Words","pathname","useHistory","location","getData","get","Alphabet","Days","Months","Layout","component","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f0b3093.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./header.css\";\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Guess Words</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Menu = (prosps: any) => {\r\n  const { title, toLink, icon }: any = prosps;\r\n\r\n  return (\r\n    <Link to={toLink}>\r\n      <div className=\"menu\">\r\n        <FontAwesomeIcon icon={icon} size=\"3x\" color=\"black\" />\r\n        <p>{title}</p>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport Menu from \"./Menu\";\r\nimport \"./menus.css\";\r\nimport {\r\n  faAsterisk,\r\n  faBraille,\r\n  faCalendarDay,\r\n  faFont,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nconst Menus = () => {\r\n  return (\r\n    <div className=\"menus\">\r\n      <Menu title=\"General\" icon={faAsterisk} toLink=\"words\" />\r\n      <Menu title=\"Dias\" icon={faCalendarDay} toLink=\"days\" />\r\n      <Menu title=\"Meses\" icon={faBraille} toLink=\"months\" />\r\n      <Menu title=\"Alfabeto\" icon={faFont} toLink=\"alphabet\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menus;\r\n","import React from \"react\";\r\nimport Menus from \"../Menus\";\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <Menus />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import words from \"../data/words.json\";\r\nimport alphabet from \"../data/alphabet.json\";\r\nimport days from \"../data/days.json\";\r\nimport months from \"../data/months.json\";\r\n\r\nclass GetData {\r\n  public type: string;\r\n  public data: any;\r\n  constructor(type: string) {\r\n    this.type = type.slice(1);\r\n    this.data = { words, alphabet, days, months };\r\n  }\r\n\r\n  get() {\r\n    const data = this.data[this.type];\r\n    return Array.isArray(data) ? data : [];\r\n  }\r\n}\r\n\r\nexport default GetData;\r\n","class RandomText {\r\n  random(data: any, arraytext: any): Object {\r\n    let newDta: any = [];\r\n    if (Array.isArray(data)) {\r\n      if (arraytext.length > 0 && data.length > 0) {\r\n        for (const row of data) {\r\n          const object = arraytext.find(\r\n            (item: any) => item.ENGLISH === row.ENGLISH\r\n          );\r\n          if (!object) {\r\n            newDta = [...newDta, row];\r\n          }\r\n        }\r\n      } else {\r\n        newDta = data;\r\n      }\r\n    }\r\n    return Array.isArray(newDta) && newDta.length > 0\r\n      ? newDta[Math.floor(Math.random() * newDta.length)]\r\n      : {};\r\n  }\r\n}\r\n\r\nexport default RandomText;\r\n","import React from \"react\";\r\nimport \"./badge.css\";\r\nconst Badge = ({ value, color }: any) => {\r\n  return (\r\n    <>\r\n      <span style={{ backgroundColor: color }} className=\"badge pill\">\r\n        <span> {value}</span>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Badge;\r\n","import React from \"react\";\r\nimport Badge from \"../Badge\";\r\nimport \"./footer.css\";\r\nconst Footer = (props: any) => {\r\n  const { bad, good, arryText, data } = props;\r\n  return (\r\n    <div className=\"footer\">\r\n      <div>\r\n        {arryText.length}/{data.length}\r\n      </div>\r\n      <div>\r\n        <span>Buenas</span>\r\n        <Badge color=\"green\" value={good} />\r\n      </div>\r\n      <div>\r\n        <span>Malas</span>\r\n        <Badge color=\"red\" value={bad} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Divider, Form } from \"semantic-ui-react\";\r\nimport RandomText from \"../../libs/random\";\r\nimport Footer from \"../Footer\";\r\nimport \"./action.css\";\r\nconst Action = (props: any) => {\r\n  const [state, setsTate]: any = useState({});\r\n  const [input, setInput]: any = useState(\"\");\r\n  const [isShow, setIsShow]: any = useState(false);\r\n  const [color, setColor]: any = useState(\"\");\r\n  const [arryText, setArrayText]: any = useState([]);\r\n  const [bad, setBad]: any = useState(0);\r\n  const [good, setGood]: any = useState(0);\r\n  const inputEl: any = useRef(null);\r\n  const { data, title1, title2 }: any = props;\r\n\r\n  useEffect(() => {\r\n    GetText();\r\n    focusInput();\r\n  }, []);\r\n\r\n  const GetText = () => {\r\n    const { ENGLISH, SPANISH }: any = new RandomText().random(data, arryText);\r\n    if (!ENGLISH) return;\r\n    setsTate({ ENGLISH, SPANISH });\r\n    setArrayText([...arryText, { ENGLISH, SPANISH }]);\r\n    setIsShow(false);\r\n  };\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    focusInput();\r\n    setIsShow(true);\r\n    setInput(\"\");\r\n\r\n    if (input.toLowerCase() === state?.ENGLISH?.toLowerCase()) {\r\n      setColor(\"green\");\r\n      setGood(good + 1);\r\n    } else {\r\n      setColor(\"red\");\r\n      setBad(bad + 1);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setColor(\"\");\r\n      GetText();\r\n    }, 3000);\r\n  };\r\n  const focusInput = () => inputEl.current.focus();\r\n\r\n  return (\r\n    <div className=\"action\">\r\n      <h2>\r\n        {title1}: {state?.SPANISH?.toUpperCase()}{\" \"}\r\n      </h2>\r\n      <h2>\r\n        {title2}:\r\n        {isShow ? (\r\n          <span style={{ color: color }}>{state?.ENGLISH?.toUpperCase()}</span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {isShow}\r\n      </h2>\r\n      <Divider />\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Field>\r\n          <input\r\n            ref={inputEl}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            value={input}\r\n            placeholder=\"Ingresar texto en ingles\"\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n      <Footer bad={bad} good={good} arryText={arryText} data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Action;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GetData from \"../../libs/data\";\r\nimport Action from \"../Action\";\r\nconst Words = () => {\r\n  const {\r\n    location: { pathname },\r\n  }: any = useHistory();\r\n\r\n  const getData = new GetData(pathname).get();\r\n\r\n  return (\r\n    <>\r\n      <Action data={getData} title1=\"Español\" title2=\"Ingles\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Words;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GetData from \"../../libs/data\";\r\nimport Action from \"../Action\";\r\nconst Alphabet = () => {\r\n  const {\r\n    location: { pathname },\r\n  }: any = useHistory();\r\n\r\n  const getData = new GetData(pathname).get();\r\n  return (\r\n    <>\r\n      <Action data={getData} title1=\"Letra\" title2=\"Pronuciaciòn\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Alphabet;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GetData from \"../../libs/data\";\r\nimport Action from \"../Action\";\r\nconst Days = () => {\r\n  const {\r\n    location: { pathname },\r\n  }: any = useHistory();\r\n\r\n  const getData = new GetData(pathname).get();\r\n\r\n  return (\r\n    <>\r\n      <Action data={getData} title1=\"Español\" title2=\"Ingles\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Days;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GetData from \"../../libs/data\";\r\nimport Action from \"../Action\";\r\nconst Months = () => {\r\n  const {\r\n    location: { pathname },\r\n  }: any = useHistory();\r\n\r\n  const getData = new GetData(pathname).get();\r\n\r\n  return (\r\n    <>\r\n      <Action data={getData} title1=\"Español\" title2=\"Ingles\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Months;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Header from \"../Header\";\r\nimport Home from \"../Home\";\r\nimport Words from \"../Words\";\r\nimport Alphabet from \"../Alphabet\";\r\nimport Days from \"../Days\";\r\nimport Months from \"../Months\";\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./layout.css\";\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <div className=\"layout\">\r\n      <Header />\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route component={Home} exact path=\"/\" />\r\n          <Route component={Words} path=\"/words\" />\r\n          <Route component={Alphabet} path=\"/alphabet\" />\r\n          <Route component={Days} path=\"/days\" />\r\n          <Route component={Months} path=\"/months\" />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, HashRouter } from \"react-router-dom\";\n\nimport Layout from \"./componets/Layout\";\nconst App = () => {\n  return (\n    <Router>\n      {/* <HashRouter> */}\n      <Layout />\n      {/* </HashRouter> */}\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}